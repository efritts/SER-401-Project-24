[{"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/index.js":"1","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/App.js":"2","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/serviceWorker.js":"3","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/utils/auth/useLocalStorage.hook.js":"4","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/pages/Login.jsx":"5","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/pages/SearchDetails.jsx":"6","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/pages/AccountDetails.jsx":"7","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/pages/Shipments/AllShipments.jsx":"8","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/pages/Shipments/ShipmentDetails.jsx":"9","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/pages/Assets/AssetDetails.jsx":"10","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/pages/Assets/AssemblyManager.jsx":"11","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/pages/Dashboard.jsx":"12","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/pages/Assets/AllAssets.jsx":"13","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/pages/Shipments/ShipmentCreator.jsx":"14","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/General/Sidebar.jsx":"15","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/General/Header.jsx":"16","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/General/Cart.jsx":"17","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Tables/ChipBar.jsx":"18","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Tables/SimpleList.jsx":"19","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Tables/CustomTable.jsx":"20","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Tables/TableToolbar.jsx":"21","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/AssetFilter.jsx":"22","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/GeneralDialogs/EventDetailsViewer.jsx":"23","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/GeneralDialogs/EventFilter.jsx":"24","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/GeneralDialogs/WarningDialog.jsx":"25","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/ShipmentDialogs/ShipmentFilter.jsx":"26","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/ShipmentDialogs/CreateNewShipmentDialog.jsx":"27","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/ChangeStatusDialog.jsx":"28","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/QuickAssetView.jsx":"29","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/AddUnserializedDialog.jsx":"30","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/ShipmentDialogs/ShipmentSubmitDialog.jsx":"31","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/utils/constants.utils.js":"32","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/General/LocationAccordion.jsx":"33","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Tables/TableHead.jsx":"34","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Feedback/IndicatorBar.jsx":"35","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Feedback/ErrorIndicator.jsx":"36","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Feedback/WarningIndicator.jsx":"37","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/utils/assembly.utils.js":"38","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/utils/mapping.utils.js":"39","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/InvalidSerialsDialog.jsx":"40","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/CreateAssetDialog.jsx":"41","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/AssetEditWarning.jsx":"42","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/AssignmentTypeDialogue.jsx":"43","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/ChangeOwnershipDialog.jsx":"44","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/ChangeAssignmentDialog.jsx":"45","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/ChangeGroupTagDialog.jsx":"46","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/RetireAssetDialog.jsx":"47","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/General/Map.jsx":"48","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Tables/TableSearchbar.jsx":"49","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/IncompleteAssemblyDialog.jsx":"50","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/AssemblySubmitDialog.jsx":"51","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/CreateNewAssemblyDialog.jsx":"52","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/General/Manifest.jsx":"53","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/General/AssetTimeline.jsx":"54","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/AssemblyModificationWarning.jsx":"55","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Searchbar/Searchbar.jsx":"56","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Searchbar/EventResult.jsx":"57","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Searchbar/AssetResult.jsx":"58","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/pages/Shipments/ShipmentDetails.tsx":"59","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/GeneralDialogs/UploadFileDialog.tsx":"60","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Tables/AttachmentTable.tsx":"61","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/GeneralDialogs/FilePreview.jsx":"62","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/General/AttachmentDropper.tsx":"63","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/utils/math.utils.ts":"64","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/General/PDFViewer.jsx":"65"},{"size":597,"mtime":1611689864127,"results":"66","hashOfConfig":"67"},{"size":3754,"mtime":1618245851829,"results":"68","hashOfConfig":"67"},{"size":5086,"mtime":1610492100066,"results":"69","hashOfConfig":"67"},{"size":978,"mtime":1611689864133,"results":"70","hashOfConfig":"67"},{"size":7813,"mtime":1616614348053,"results":"71","hashOfConfig":"67"},{"size":6760,"mtime":1617922841678,"results":"72","hashOfConfig":"67"},{"size":9184,"mtime":1617922841676,"results":"73","hashOfConfig":"67"},{"size":11880,"mtime":1617922841678,"results":"74","hashOfConfig":"67"},{"size":13165,"mtime":1617922841679,"results":"75","hashOfConfig":"67"},{"size":14797,"mtime":1617922841677,"results":"76","hashOfConfig":"67"},{"size":21055,"mtime":1617922841677,"results":"77","hashOfConfig":"67"},{"size":2206,"mtime":1617922841678,"results":"78","hashOfConfig":"67"},{"size":23403,"mtime":1617922841677,"results":"79","hashOfConfig":"67"},{"size":21969,"mtime":1617922841678,"results":"80","hashOfConfig":"67"},{"size":24210,"mtime":1617922841673,"results":"81","hashOfConfig":"67"},{"size":585,"mtime":1618243644452,"results":"82","hashOfConfig":"67"},{"size":14485,"mtime":1617922841672,"results":"83","hashOfConfig":"67"},{"size":5915,"mtime":1616614348048,"results":"84","hashOfConfig":"67"},{"size":3923,"mtime":1616614348050,"results":"85","hashOfConfig":"67"},{"size":18230,"mtime":1617922841675,"results":"86","hashOfConfig":"67"},{"size":2344,"mtime":1617922841676,"results":"87","hashOfConfig":"67"},{"size":16255,"mtime":1617922841666,"results":"88","hashOfConfig":"67"},{"size":4418,"mtime":1617922841669,"results":"89","hashOfConfig":"67"},{"size":5815,"mtime":1617922841670,"results":"90","hashOfConfig":"67"},{"size":2508,"mtime":1617922841670,"results":"91","hashOfConfig":"67"},{"size":15322,"mtime":1617922841671,"results":"92","hashOfConfig":"67"},{"size":8824,"mtime":1617922841670,"results":"93","hashOfConfig":"67"},{"size":4119,"mtime":1617922841667,"results":"94","hashOfConfig":"67"},{"size":5575,"mtime":1617922841669,"results":"95","hashOfConfig":"67"},{"size":4173,"mtime":1617922841665,"results":"96","hashOfConfig":"67"},{"size":9608,"mtime":1617922841671,"results":"97","hashOfConfig":"67"},{"size":171,"mtime":1617224282655,"results":"98","hashOfConfig":"67"},{"size":30791,"mtime":1617922841672,"results":"99","hashOfConfig":"67"},{"size":3635,"mtime":1616614653298,"results":"100","hashOfConfig":"67"},{"size":1554,"mtime":1616614653294,"results":"101","hashOfConfig":"67"},{"size":2308,"mtime":1616614653293,"results":"102","hashOfConfig":"67"},{"size":2328,"mtime":1617922841671,"results":"103","hashOfConfig":"67"},{"size":2142,"mtime":1616614348055,"results":"104","hashOfConfig":"67"},{"size":3280,"mtime":1617922841679,"results":"105","hashOfConfig":"67"},{"size":2187,"mtime":1617922841668,"results":"106","hashOfConfig":"67"},{"size":13245,"mtime":1617922841668,"results":"107","hashOfConfig":"67"},{"size":2583,"mtime":1617922841666,"results":"108","hashOfConfig":"67"},{"size":4764,"mtime":1617922841666,"results":"109","hashOfConfig":"67"},{"size":4552,"mtime":1617922841667,"results":"110","hashOfConfig":"67"},{"size":4636,"mtime":1617922841667,"results":"111","hashOfConfig":"67"},{"size":4199,"mtime":1617922841667,"results":"112","hashOfConfig":"67"},{"size":4679,"mtime":1617922841669,"results":"113","hashOfConfig":"67"},{"size":14846,"mtime":1618243766927,"results":"114","hashOfConfig":"67"},{"size":2016,"mtime":1617922841675,"results":"115","hashOfConfig":"67"},{"size":2490,"mtime":1617922841668,"results":"116","hashOfConfig":"67"},{"size":10610,"mtime":1617922841666,"results":"117","hashOfConfig":"67"},{"size":4677,"mtime":1617922841668,"results":"118","hashOfConfig":"67"},{"size":2311,"mtime":1617922841672,"results":"119","hashOfConfig":"67"},{"size":7968,"mtime":1617922841672,"results":"120","hashOfConfig":"67"},{"size":3908,"mtime":1617922841666,"results":"121","hashOfConfig":"67"},{"size":5931,"mtime":1617922841674,"results":"122","hashOfConfig":"67"},{"size":5343,"mtime":1617922841673,"results":"123","hashOfConfig":"67"},{"size":6029,"mtime":1616614348047,"results":"124","hashOfConfig":"67"},{"size":20453,"mtime":1618244000116,"results":"125","hashOfConfig":"67"},{"size":2688,"mtime":1618244000116,"results":"126","hashOfConfig":"67"},{"size":8671,"mtime":1618243644444,"results":"127","hashOfConfig":"67"},{"size":3670,"mtime":1618247261329,"results":"128","hashOfConfig":"67"},{"size":5656,"mtime":1618244000116,"results":"129","hashOfConfig":"67"},{"size":680,"mtime":1618243644444,"results":"130","hashOfConfig":"67"},{"size":1417,"mtime":1618247259299,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"1uwkbnx",{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"134"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"134"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"134"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/index.js",[],["267","268"],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/App.js",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/serviceWorker.js",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/utils/auth/useLocalStorage.hook.js",["269"],"//Retrieved from https://usehooks.com/useLocalStorage/\n\nimport React, { useState } from \"react\";\n\nconst useLocalStorage = (key, initialValue) => {\n    const [storedValue, setStoredValue] = useState(() => {\n        try {\n            const item = window.localStorage.getItem(key);\n            return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n            console.log(error);\n            return initialValue;\n        }\n    })\n\n    const setValue = value => {\n        try {\n            const valueToStore = value instanceof Function ? value(storedValue) : value;\n            setStoredValue(valueToStore);\n            if (valueToStore === null) {\n                window.localStorage.removeItem(key);\n            } else {\n                window.localStorage.setItem(key, JSON.stringify(valueToStore));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return [storedValue, setValue]\n};\n\nexport default useLocalStorage;","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/pages/Login.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/pages/SearchDetails.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/pages/AccountDetails.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/pages/Shipments/AllShipments.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/pages/Shipments/ShipmentDetails.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/pages/Assets/AssetDetails.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/pages/Assets/AssemblyManager.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/pages/Dashboard.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/pages/Assets/AllAssets.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/pages/Shipments/ShipmentCreator.jsx",["270","271"],"import React, { useState, useEffect } from 'react';\n\n//Library Tools\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles'\nimport uuid from 'react-uuid';\n\n//Material-UI Components\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport Fab from '@material-ui/core/Fab';\n\n//Icons\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport AddIcon from '@material-ui/icons/Add';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\n\n//Dialogs\nimport AssetFilter from '../../components/Dialogs/AssetDialogs/AssetFilter'\nimport CreateNewShipmentDialog from '../../components/Dialogs/ShipmentDialogs/CreateNewShipmentDialog';\nimport ShipmentSubmitDialog from '../../components/Dialogs/ShipmentDialogs/ShipmentSubmitDialog';\nimport QuickAssetView from '../../components/Dialogs/AssetDialogs/QuickAssetView';\nimport WarningDialog from '../../components/Dialogs/GeneralDialogs/WarningDialog';\nimport AddUnserializedDialog from '../../components/Dialogs/AssetDialogs/AddUnserializedDialog';\n\n//Custom Components\nimport Header from '../../components/General/Header'\nimport ChipBar from '../../components/Tables/ChipBar';\nimport CustomTable from '../../components/Tables/CustomTable'\nimport TableToolbar from '../../components/Tables/TableToolbar';\nimport NewCart from '../../components/General/Cart';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n\n    },\n    paper: {\n        marginLeft: \"15px\",\n        marginRight: \"15px\",\n        height: \"75vh\",\n        display: \"flex\"\n    },\n    item: {\n        padding: theme.spacing(2),\n        marginTop: \"10rem\"\n    },\n    break: {\n        flexGrow: 1,\n        fontWeight: \"bold\"\n    },\n    puzzle: {\n        color: theme.palette.secondary.light,\n        fontSize: \"5rem\",\n        opacity: \"75%\",\n    },\n    title: {\n        marginLeft: \"20px\",\n    },\n    cartInactive: {\n        backgroundColor: \"#D9D9D9\",\n    },\n    settingTitle: {\n        padding: \"0px 24px 16px 24px\",\n        color: \"#000000\",\n        opacity: \"0.58\",\n        fontWeight: \"bold\"\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: 'auto',\n        width: 'fit-content',\n    },\n    formControl: {\n        margin: theme.spacing(2),\n        minWidth: 180,\n        maxWidth: 250\n    },\n    spacer: {\n        padding: \"6px 8px\"\n    },\n    unserializedFab: {\n        position: \"fixed\",\n        bottom: theme.spacing(6),\n        right: theme.spacing(15)\n    },\n    unserializedAddIcon: {\n        marginRight: theme.spacing(1)\n    }\n}))\n\n//fields to select for the particular type of document going into the table\nconst selectedFields = [\"serial\", \"assetName\", \"assetType\", \"owner\", \"checkedOut\", \"groupTag\"];\n\n\nconst ShipmentCreator = () => {\n    const classes = useStyles();\n    const history = useHistory();\n\n    /* Data state */\n    const [state, setState] = useState({}); //main info about assembly, owner, etc\n    const [assets, setAssets] = useState([]); //results list\n    const [selected, setSelected] = useState([]);\n    const [mapItems, setMapItems] = useState([]);\n    const [assetCount, setAssetCount] = useState(0);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [cartItems, setCartItems] = useState([]);\n    const [success, setSuccess] = useState(null);\n    const [override, toggleOverride] = useState(false);\n    const [submission, setSubmission] = useState({});\n    const [hasParents, setHasParents] = useState(false);\n    const [haveParents, setHaveParents] = useState([]);\n    const [cartBadge, setCartBadge] = useState(\"badge\");\n\n    /* Dialog state */\n    const [shipmentStarted, toggleShipment] = useState(false);\n    const [creatorOpen, setCreatorOpen] = useState(false);\n    const [filterOpen, setFilterOpen] = useState(false);\n    const [submitOpen, setSubmitOpen] = useState(false);\n    const [unserializedOpen, setUnserializedOpen] = useState(false);\n    const [abandoned, setAbandoned] = useState(false);\n\n    /* Filter state */\n    const [filters, setFilters] = useState({\n        limit: 5\n    });\n    const [activeFilters, setActiveFilters] = useState({});\n    const originalURL = `${process.env.REACT_APP_API_URL}/assets`;\n    const [url, setURL] = useState(originalURL);\n\n\n    /* Set url with supplied filters */\n    useEffect(() => {\n        setURL(() => {\n            let newURL = originalURL;\n            let index = 0;\n\n            Object.keys(filters).forEach((key, idx) => {\n                let concatenator = index === 0 ? \"?\" : \"&\";\n                newURL += `${concatenator}${key}=${filters[key]}`;\n                index++;\n            });\n\n            return newURL;\n        });\n    }, [filters, originalURL, shipmentStarted]);\n\n    /* Fetch shipment list */\n    useEffect(() => {\n        fetch(url)\n            .then(response => {\n                if (response.status < 300) {\n                    return response.json();\n                } else {\n                    if (response.status >= 300) {\n\n                        return {\n                            count: [{ count: 0 }],\n                            data: []\n                        }\n                    } else {\n                        return null;\n                    }\n\n                }\n            })\n            .then(json => {\n                if (json) {\n                    setAssetCount(json.count[0].count);\n                    setAssets(json.data);\n                }\n            });\n    }, [url]);\n\n    /* Reset page of table to the first when filters are changed */\n    useEffect(() => {\n        setFilters(s => ({ ...s, page: 0 }));\n    }, [activeFilters]);\n\n    useEffect(() => {\n        setCartBadge(\"badge badge-reload\");\n        setCartBadge(\"badge\");\n    }, [cartItems])\n\n    /* Initial blank page button handler to open creator dialog */\n    const handleStart = () => {\n        setCreatorOpen(true);\n    }\n\n    /* Set information from creator dialog upon submission */\n    const handleCreate = (childState) => {\n        setState(s => ({\n            ...s,\n            shipFrom: {\n                id: childState.shipFrom[\"_id\"],\n                key: childState.shipFrom[\"key\"],\n                name: childState.shipFrom[\"locationName\"]\n            },\n            shipTo: {\n                id: childState.shipTo[\"_id\"],\n                key: childState.shipTo[\"key\"],\n                name: childState.shipTo[\"locationName\"]\n            },\n            shipmentType: childState.shipmentType\n        }));\n        setCreatorOpen(false);\n        toggleShipment(true);\n    }\n\n    /* Handle cancel button on creator dialog */\n    const handleCancel = () => {\n        setCreatorOpen(false);\n        toggleShipment(false);\n\n        setState(s => {\n            Object.keys(s).forEach(key => {\n                if (s[key] instanceof Array) {\n                    s[key] = [];\n                } else {\n                    s[key] = \"\";\n                }\n            })\n            return (s);\n        })\n    }\n\n    /* Check if selected items already have parent assemblies or are deployed elsewhere and then add to cart */\n    const handleAddToCart = () => {\n        const badSerials = [];\n\n        const newAdditions = []\n\n        mapItems.forEach(item => {\n\n            const isDeployed = item.deployedLocation && (state.shipFrom[\"key\"] && item.deployedLocation[\"key\"] !== state.shipFrom[\"key\"]);\n            const hasParent = Boolean(item.parentId);\n            const isCheckedOut = Boolean(item.checkedOut);\n\n            const warning = {\n                serial: item.serial,\n                name: item.assetName\n            };\n\n            /* Generate 'problem' descriptor elements for the warning/override dialog */\n            const problems = []\n            if (isDeployed) {\n                problems.push(\n                    <React.Fragment key={uuid()}>\n                        <span>Deployed at non-matching location {item.deployedLocation[\"key\"]} (selected location: {state.shipFrom[\"key\"]})</span>\n                        <br />\n                    </React.Fragment>\n                );\n            }\n\n            if (hasParent) {\n                problems.push(\n                    <React.Fragment key={uuid()}>\n                        <span>Asset is a child of assembly {item.parentId}</span>\n                        <br />\n                    </React.Fragment>\n                );\n            }\n\n            if (isCheckedOut) {\n                problems.push(\n                    <React.Fragment key={uuid()}>\n                        <span>Asset is already checked out</span>\n                        <br />\n                    </React.Fragment>\n                );\n            }\n\n            if (problems.length) {\n                warning[\"problem\"] = <div>{problems}</div>\n                badSerials.push(warning);\n            }\n\n            /* If no warning, just add it to the items to be added to the cart */\n            if (!isDeployed && !hasParent && !isCheckedOut) {\n                newAdditions.push({\n                    serial: item.serial,\n                    name: item.assetName\n                });\n            }\n        });\n\n        //add the good serials to the cart and trigger warning dialog for the serials with parents\n        if (badSerials.length) {\n            setCartItems(orig => ([...orig, ...newAdditions]));\n            setSelected([]);\n            setMapItems([]);\n            setHaveParents(badSerials);\n            setHasParents(true);\n            return;\n        }\n\n        //set the cart items if no bad serials are found\n        setCartItems(orig => [...orig, ...newAdditions]);\n        setSelected([]);\n        setMapItems([]);\n    }\n\n    /** \n     * Sets the submission information and opens the submit dialog\n     */\n    const handleSubmitCheck = () => {\n\n        setSubmission(s => ({\n            ...s,\n            shipmentType: state.shipmentType,\n            shipFrom: state.shipFrom,\n            shipTo: state.shipTo,\n            assets: cartItems.map(item => ({\n                serial: item.serial,\n                name: item.name ? item.name : item.assetName,\n                quantity: item.quantity ? item.quantity : 1,\n                notes: item.notes ? item.notes : null,\n                serialized: item.serial !== \"N/A\" ? true : false\n            })),\n            override: state.override || false\n        }));\n\n        setAnchorEl(null);\n        setSubmitOpen(true);\n\n    };\n\n\n    /* Handles the cancel button from the Submit Assembly dialog but leave all selections and cart items in place for editing */\n    const handleSubmitCancel = () => {\n        toggleOverride(false);\n        setSubmitOpen(false);\n    };\n\n    /* Remove all state when assembly is abandoned */\n    const handleAbandon = () => {\n        toggleOverride(false);\n        setCreatorOpen(false);\n        toggleShipment(false);\n        setSubmitOpen(false);\n        setAssets([]);\n        setAssetCount(0);\n        setSelected([]);\n        setMapItems([]);\n        setSubmission({});\n        setCartItems([]);\n        setState({});\n        setActiveFilters({});\n        setFilters({ limit: 5 });\n        setAbandoned(false);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={2}>\n\n                <Grid item xs={12}>\n                    <Header heading=\"Shipments\" subheading=\"Shipment Creator\" />\n                </Grid>\n\n                <Grid item xs={12}>\n                    {/* Render placeholder box if assembly is not started or the actual results table if it is */}\n                    {\n                        shipmentStarted\n                            ?\n                            <>\n                                <CustomTable\n                                    variant=\"asset\"\n                                    data={assets}\n                                    selectedFields={selectedFields}\n                                    selected={selected}\n                                    filters={filters}\n                                    count={assetCount}\n                                    checkboxes\n\n                                    renderOnClick={QuickAssetView}\n                                    onFilterChange={(newFilters) => setFilters(s => ({ ...s, ...newFilters }))}\n                                    onValidate={(asset) => {\n                                        const warnings = [];\n                                        const errors = [];\n\n                                        if (asset.parentId) warnings.push(`Asset is a part of assembly ${asset.parentId}`);\n                                        if (asset.deployedLocation) {\n                                            if (state[\"shipFrom\"] && state[\"shipFrom\"].key !== asset.deployedLocation[\"key\"]) {\n                                                warnings.push(<span>Asset is deployed at a non-matching location ({asset.deployedLocation[\"key\"]})</span>);\n                                            }\n                                        }\n                                        if (asset.checkedOut) {\n                                            warnings.push(\"Asset is marked as being checked out\");\n                                        }\n\n                                        return { warnings: warnings, errors: errors };\n                                    }}\n                                    onAdditionalSelect={setMapItems}\n                                    onCompare={(item) => cartItems.find(cartItem => cartItem[selectedFields[0]] === item[selectedFields[0]])}\n                                    onSelectedChange={setSelected}>\n\n                                    <TableToolbar title=\"Shipment Creator\" selected={selected}>\n                                        {\n                                            selected.length > 0 ?\n                                                <Tooltip title={\"Add\"}>\n                                                    <IconButton aria-label={\"add\"} onClick={handleAddToCart}>\n                                                        <AddIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                                :\n                                                <Tooltip title={\"Filter\"}>\n                                                    <IconButton aria-label={\"filter\"} onClick={() => setFilterOpen(true)}>\n                                                        <FilterListIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                        }\n                                    </TableToolbar>\n\n                                    <ChipBar\n                                        activeFilters={activeFilters}\n                                        setActiveFilters={setActiveFilters}\n                                        setFilters={setFilters} />\n\n                                </CustomTable>\n                                <Button style={{ color: \"red\", float: \"left\", marginLeft: \"20px\" }} variant=\"text\" onClick={() => setAbandoned(true)}>Abandon</Button>\n                            </>\n                            : <Paper className={classes.paper}>\n                                <Box m=\"auto\">\n                                    <LocalShippingIcon className={classes.puzzle} />\n                                    <Typography variant=\"h5\">Welcome to the Shipment Creator!</Typography>\n                                    <Typography variant=\"h6\" className={classes.item}>No Shipment In Progress</Typography>\n                                    <div style={{ flexBasis: \"100%\", height: \"5rem\" }} />\n                                    <Button color=\"primary\" variant=\"contained\" onClick={handleStart}>Start Shipment</Button>\n                                </Box>\n                            </Paper>\n                    }\n                </Grid>\n            </Grid>\n\n            <NewCart\n                cartItems={cartItems}\n                headers={[\"Serial\", \"Name\", \"Quantity\"]}\n                onSubmit={handleSubmitCheck}\n                onRemove={(idObj) => {\n                    const [key, value] = Object.entries(idObj)[0];\n                    setCartItems(s => s.filter(item => item[key] !== value));\n                }}\n                onClickAway={() => setAnchorEl(null)}\n                anchorEl={anchorEl}\n                onNoteUpdate={(idObj) => {\n                    const index = cartItems.findIndex(item => item[idObj.idKey] === idObj[idObj.idKey]);\n                    let newCart = [...cartItems];\n                    if (idObj.notes === \"\" && newCart[index].notes) delete newCart[index].notes;\n                    else newCart[index].notes = idObj.notes;\n                    setCartItems(newCart);\n                }}\n                onClear={() => setCartItems([])}\n                notes\n                placement=\"top\" />\n\n            <CreateNewShipmentDialog\n                creatorOpen={creatorOpen}\n                handleCreate={handleCreate}\n                handleCancel={handleCancel}\n            />\n\n            <AssetFilter\n                open={filterOpen}\n                setOpen={(isOpen) => setFilterOpen(isOpen)}\n                setActiveFilters={setActiveFilters}\n                assetList={null}\n            />\n\n            <AddUnserializedDialog\n                open={unserializedOpen}\n                onClose={() => setUnserializedOpen(false)}\n                onSubmit={(obj) => {\n                    setCartItems(s => [...s, obj]);\n                    setUnserializedOpen(false);\n                }} />\n\n            <ShipmentSubmitDialog\n                open={submitOpen}\n                onSuccess={() => setSuccess(true)}\n                onFailure={() => setSuccess(false)}\n                handleCancel={handleSubmitCancel}\n                submission={submission}\n            />\n\n\n            <WarningDialog\n                open={hasParents}\n                setOpen={setHasParents}\n                handleOverride={() => {\n                    const items = haveParents.map(item => ({ name: item.name, serial: item.serial }));\n                    setCartItems(c => [...c, ...items]);\n                    setHasParents(false);\n                    setHaveParents([]);\n                    setState(s => ({ ...s, override: true }));\n                }}\n                text={\n                    <div style={{ textAlign: \"center\" }}>\n                        <span>Some selected assets have problems <br /> <br /></span>\n                        <span>Overriding this warning will force-update the assets upon shipment submission</span>\n                    </div>\n                }\n                title=\"Warning\"\n                items={haveParents.map(item => [item.serial, item.name, item.problem])}\n                headers={[\"Serial\", \"Name\", \"Problem\"]}\n            />\n\n            <WarningDialog\n                open={abandoned}\n                setOpen={setAbandoned}\n                handleOverride={handleAbandon}\n                text=\"Abandoning this shipment will erase all current modifications\"\n                title=\"Abandon Shipment?\"\n                items={null}\n            />\n\n\n            {/* Success or failure feedback upon assembly submission */}\n            {/* Resets all creator state upon success or leave intact for another try if the assembly fails to submit */}\n            <Snackbar\n                open={success !== null}\n                onEnter={() => toggleShipment(false)}\n                autoHideDuration={5000}\n                onClose={() => {\n                    if (success) {\n                        setSuccess(null)\n                        handleAbandon();\n                    }\n                    setSuccess(null)\n                }}\n                anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n                style={{ boxShadow: \"1px 2px 6px #5f5f5f\", borderRadius: \"3px\" }}>\n                {\n                    success !== null ?\n                        <Alert onClose={() => setSuccess(null)} severity={success ? \"success\" : \"error\"}>\n                            {success === true ? \"Assembly successfully created or modified!\" : \"Failed to submit assembly...\"}\n                        </Alert>\n                        : null\n                }\n            </Snackbar>\n\n            {/* Floating action buttons for the shipment cart and the unserialized item creator */}\n            {\n                shipmentStarted ?\n                    <>\n                        <Fab\n                            className={classes.unserializedFab}\n                            color=\"secondary\"\n                            aria-label=\"add unserialized component\"\n                            variant=\"extended\"\n                            onClick={() => setUnserializedOpen(true)}>\n\n                            <AddIcon className={classes.unserializedAddIcon} />\n                            <span>Add Unserialized Item</span>\n                        </Fab>\n\n                        <div className={cartBadge} value={cartItems.length}>\n                            <Fab\n                                color=\"primary\"\n                                onClick={(event) => setAnchorEl(event.target)}>\n                                <ShoppingCartIcon />\n                            </Fab>\n                        </div>\n\n                    </>\n                    : null\n            }\n\n        </div>\n    );\n}\n\nexport default ShipmentCreator;","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/General/Sidebar.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/General/Header.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/General/Cart.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Tables/ChipBar.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Tables/SimpleList.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Tables/CustomTable.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Tables/TableToolbar.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/AssetFilter.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/GeneralDialogs/EventDetailsViewer.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/GeneralDialogs/EventFilter.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/GeneralDialogs/WarningDialog.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/ShipmentDialogs/ShipmentFilter.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/ShipmentDialogs/CreateNewShipmentDialog.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/ChangeStatusDialog.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/QuickAssetView.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/AddUnserializedDialog.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/ShipmentDialogs/ShipmentSubmitDialog.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/utils/constants.utils.js",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/General/LocationAccordion.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Tables/TableHead.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Feedback/IndicatorBar.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Feedback/ErrorIndicator.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Feedback/WarningIndicator.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/utils/assembly.utils.js",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/utils/mapping.utils.js",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/InvalidSerialsDialog.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/CreateAssetDialog.jsx",["272","273"],"import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { Typography } from '@material-ui/core';\nimport useLocalStorage from '../../../utils/auth/useLocalStorage.hook';\n\nconst useStyles = makeStyles((theme) => ({\n    item: {\n    },\n    formControl: {\n        marginBottom: theme.spacing(2),\n        minWidth: 180,\n        marginLeft: \"20px\"\n    },\n    entry: {\n        marginLeft: \"20px\"\n    },\n    error: {\n\n    },\n    range: {\n        marginLeft: \"20px\",\n        width: \"40%\"\n    },\n    owner: {\n        marginBottom: theme.spacing(2),\n        minWidth: 240,\n        marginLeft: \"20px\",\n        marginTop: theme.spacing(4)\n    },\n}));\n\nconst CreateAssetDialog = ({ open, setOpen, onSuccess, onSemiSuccess }) => {\n    const classes = useStyles();\n\n    const [status, setStatus] = useState(\"\");\n    const [failed, setFailed] = useState(\"\");\n    const [options, setOptions] = useState([]);\n    const [serials, setSerials] = useState(\"\");\n    const [schema, setSchema] = useState(\"\");\n    const [incorrect, setIncorrect] = useState([]);\n    const [entryType, setEntryType] = useState(\"range\");\n    const [beginRange, setBeginRange] = useState(\"\");\n    const [endRange, setEndRange] = useState(\"\");\n    const [owner, setOwner] = useState(\"\");\n    const [serialEntered, setEntered] = useState(true);\n    const [missingType, setMissingType] = useState(false);\n    const [missingBegin, setMissingBegin] = useState(false);\n    const [missingEnd, setMissingEnd] = useState(false);\n    const [missingOwner, setMissingOwner] = useState(false);\n    const [user, ] = useLocalStorage('user', {});\n\n    /* Fetches list of asset types for dropdown */\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_URL}/assets/schemas`)\n            .then(res => res.json())\n            .then(json => setOptions(json));\n    }, [])\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        if (schema === \"\") {\n            setMissingType(true);\n            return;\n        }\n\n        if (entryType === \"range\" && (beginRange === \"\" || endRange === \"\")) {\n            if (beginRange === \"\") setMissingBegin(true);\n            if (endRange === \"\") setMissingEnd(true);\n            return;\n        }\n\n        if (owner === \"\") {\n            setMissingOwner(true);\n            return;\n        }\n\n        /* setup data object to send based on API docs and required parameters */\n        let data = {};\n\n        if (entryType === \"list\") {\n            if (serials === \"\") {\n                setEntered(false);\n                return;\n            }\n            //split up serials entered in text box\n            const serial = serials.split('\\n');\n            if (serial[serial.length - 1] === '') serial.pop();\n\n            //check serials to see if they match schema\n            const check = options.filter(item => item.name === schema);\n            const serialTest = check[0].serializationFormat.split(\"-\");\n            const badOnes = serial.filter(s => {\n                if (check[0].name === \"Gamma Sensor\" || check[0].name === \"Directional Sensor\") {\n                    const reg = new RegExp(check[0].serializationFormat);\n                    return !reg.test(s);\n                }\n\n                const item = s.split('-');\n                return item[0] !== serialTest[0];\n            });\n\n            const realBad = badOnes.map((item, idx) => {\n                if (item === \"\") {\n                    return {};\n                } else {\n                    return {\n                        serial: item,\n                        line: serial.indexOf(item) + 1\n                    }\n                }\n            })\n\n            if (realBad.length > 0) {\n                if (Object.keys(realBad[0]).length === 0) {\n                    setIncorrect([]);\n                } else {\n                    setIncorrect(realBad);\n                    return;\n                }\n            } else {\n                setIncorrect([]);\n                data.type = entryType;\n                data.list = serial;\n                data.assetName = schema;\n                data.owner = owner;\n                data.user = user.uniqueId;\n                sendData(data).then(res => {\n                    if (res.invalid.length > 0) {\n                        onSemiSuccess(res.invalid);\n                    } else {\n                        onSuccess(true, res.message);\n                    }\n                    handleClose();\n                });\n            }\n        } else if (entryType === \"range\") {\n            data.type = \"range\";\n            data.serialBase = options.find(element => element.name === schema).serializationFormat;\n            data.beginRange = beginRange;\n            data.endRange = endRange;\n            data.owner = owner;\n            data.assetName = schema;\n            data.user = user.uniqueId;\n            sendData(data).then(res => {\n                if (res.invalid.length > 0) {\n                    onSemiSuccess(res.invalid);\n                } else {\n                    onSuccess(true, res.message);\n                }\n            });\n            handleClose();\n        }\n    }\n\n    const handleEntryTypeChange = (event) => {\n        setEntryType(event.target.value);\n        setSerials(\"\");\n        setBeginRange(\"\");\n        setEndRange(\"\");\n        setIncorrect([]);\n        setMissingBegin(false);\n        setMissingEnd(false);\n        setMissingType(false);\n        setEntered(true);\n    }\n\n    const sendData = async (data) => {\n        //uses POST endpoint and sends the arguments in the body of the HTTP request\n        const result = await fetch(`${process.env.REACT_APP_API_URL}/assets`, {\n            method: \"POST\",\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n        return await result.json();\n    }\n\n    //reset dialog to default state on close\n    const handleClose = () => {\n        setOpen(false);\n        setStatus(\"\");\n        setFailed(null);\n        setSerials(\"\");\n        setSchema(\"\");\n        setBeginRange(\"\");\n        setEndRange(\"\");\n        setEntered(true);\n        setMissingBegin(false);\n        setMissingEnd(false);\n        setMissingType(false);\n        setMissingOwner(false);\n        setOwner(\"\");\n        setEntryType(\"range\");\n        setIncorrect([]);\n    }\n\n    const re = /^[0-9\\b]+$/;\n\n\n    return (\n        <Dialog maxWidth=\"xs\" fullWidth open={open} onClose={handleClose} aria-labelledby=\"create-asset-dialog-title\">\n\n\n\n            <DialogTitle id=\"create-asset-dialog-title\">Create Assets</DialogTitle>\n\n            <DialogContent>\n\n\n                <div className={classes.item}>\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                        <InputLabel id=\"asset-type-label\">Asset Name</InputLabel>\n\n                        <Select\n                            labelId=\"asset-type-label\"\n                            labelWidth={90}\n                            id=\"asset-type-label\"\n                            error={missingType}\n                            value={schema}\n                            onChange={(event) => { \n                                if (missingType) setMissingType(false);\n                                setSchema(event.target.value) \n                            }}\n                        >\n                            {options ? options.map((option, key) => <MenuItem key={key} value={option.name}>{option.name}</MenuItem>) : null}\n\n                        </Select>\n                    </FormControl>\n                    <FormControl component=\"fieldset\" className={classes.entry}>\n                        <FormLabel component=\"legend\">Method</FormLabel>\n                        <RadioGroup row aria-label=\"method\" name=\"method\" value={entryType} onChange={handleEntryTypeChange}>\n                            <FormControlLabel value=\"range\" control={<Radio />} label=\"Range\" />\n                            <FormControlLabel value=\"list\" control={<Radio />} label=\"List\" />\n                        </RadioGroup>\n                    </FormControl>\n                    <br />\n                    {entryType === \"list\"\n                        ?\n                        <div className={classes.entry}>\n                            <TextField\n                                id=\"serial-list\"\n                                style={{ width: \"100%\" }}\n                                multiline\n                                rows={6}\n                                variant=\"outlined\"\n                                error={!serialEntered}\n                                value={serials}\n                                onChange={(event) => { \n                                    if (!serialEntered) setEntered(true);\n                                    setSerials(event.target.value) \n                                }}\n                                >\n\n                            </TextField>\n                            {incorrect.length > 0 ?\n                                <>\n                                    <Typography variant=\"subtitle1\" style={{ color: \"red\" }}><b>ERROR: Some serials are incorrectly formatted:</b></Typography>\n                                    <ul>\n                                        {incorrect.map(item => <><li key={item.serial}>{item.serial} (line {item.line})</li></>)}\n                                    </ul>\n                                </>\n                                : null}\n                        </div>\n                        :\n                        <div>\n                            <TextField\n                                className={classes.range}\n                                variant=\"outlined\"\n                                value={beginRange}\n                                onChange={(event) => { \n                                    if (missingBegin) setMissingBegin(false);\n                                    setBeginRange(event.target.value) \n                                }}\n                                error={re.test(beginRange) ? false : beginRange !== \"\" ? true : missingBegin ? true : false}\n                            />\n                            <span style={{ display: \"inline-block\", padding: \"15px 0px 15px 15px\", marginRight: \"-5px\" }}> to </span>\n                            <TextField\n                                className={classes.range}\n                                variant=\"outlined\"\n                                value={endRange}\n                                onChange={(event) => { \n                                    if (missingEnd) setMissingEnd(false);\n                                    setEndRange(event.target.value) \n                                }}\n                                error={re.test(endRange) ? false : endRange !== \"\" ? true : missingEnd ? true : false}\n                            />\n                        </div>\n                    }\n\n                    <FormControl variant=\"outlined\" className={classes.owner}>\n                        <InputLabel id=\"asset-type-label\">Owner</InputLabel>\n                        <Select\n                            labelId=\"owner-label\"\n                            labelWidth={50}\n                            fullWidth\n                            id=\"owner-label\"\n                            error={missingOwner}\n                            value={owner}\n                            defaultValue=\"Supply Chain-USA\"\n                            onChange={(event) => {\n                                if (missingOwner) setMissingOwner(false);\n                                setOwner(event.target.value);\n                            }}\n                        >\n                            {/* TODO: De-hardcode */}\n                            <MenuItem value=\"Supply Chain-USA\">Supply Chain-USA</MenuItem>\n                            <MenuItem value=\"Supply Chain-CA\">Supply Chain-CA</MenuItem>\n\n                        </Select>\n                    </FormControl>\n                </div>\n            </DialogContent>\n\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={handleSubmit} type=\"submit\" color=\"primary\">\n                    Submit\n                </Button>\n            </DialogActions>\n\n        </Dialog>\n    );\n};\n\nexport default CreateAssetDialog;","/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/AssetEditWarning.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/AssignmentTypeDialogue.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/ChangeOwnershipDialog.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/ChangeAssignmentDialog.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/ChangeGroupTagDialog.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/RetireAssetDialog.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/General/Map.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Tables/TableSearchbar.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/IncompleteAssemblyDialog.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/AssemblySubmitDialog.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/CreateNewAssemblyDialog.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/General/Manifest.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/General/AssetTimeline.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/AssetDialogs/AssemblyModificationWarning.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Searchbar/Searchbar.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Searchbar/EventResult.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Searchbar/AssetResult.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/pages/Shipments/ShipmentDetails.tsx",[],["274","275"],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/GeneralDialogs/UploadFileDialog.tsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Tables/AttachmentTable.tsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/Dialogs/GeneralDialogs/FilePreview.jsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/General/AttachmentDropper.tsx",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/utils/math.utils.ts",[],"/Users/shawnstawiarski/Documents/SER401/Project/SER-401-Project-24/frontend/src/components/General/PDFViewer.jsx",[],{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","replacedBy":"279"},{"ruleId":"280","severity":1,"message":"281","line":3,"column":8,"nodeType":"282","messageId":"283","endLine":3,"endColumn":13},{"ruleId":"280","severity":1,"message":"284","line":106,"column":11,"nodeType":"282","messageId":"283","endLine":106,"endColumn":18},{"ruleId":"280","severity":1,"message":"285","line":117,"column":12,"nodeType":"282","messageId":"283","endLine":117,"endColumn":20},{"ruleId":"280","severity":1,"message":"286","line":51,"column":12,"nodeType":"282","messageId":"283","endLine":51,"endColumn":18},{"ruleId":"280","severity":1,"message":"287","line":52,"column":12,"nodeType":"282","messageId":"283","endLine":52,"endColumn":18},{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","replacedBy":"279"},"no-native-reassign",["288"],"no-negated-in-lhs",["289"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'override' is assigned a value but never used.","'status' is assigned a value but never used.","'failed' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]